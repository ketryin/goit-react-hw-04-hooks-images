{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/image-service.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onFormSubmit","useState","query","setQuery","className","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGalleryItem","handleImgClick","largeImageURL","webformatURL","src","alt","onClick","onImageClick","ImageGallery","images","map","id","api","fetchImages","currentQuery","currentPage","fetch","then","response","ok","json","Promise","reject","Error","Button","onBtn","Modal","toggleModal","children","modalRoot","useRef","document","querySelector","handleEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","current","Status","App","setImages","status","setStatus","setCurrentQuery","setCurrentPage","showModal","setShowModal","bigImg","setBigImg","handleQuery","setTimeout","newImages","hits","concat","finally","scrollTo","top","documentElement","scrollHeight","behavior","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b108aaad.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Searchbar.css\";\r\n\r\nfunction Searchbar({ onFormSubmit}) {\r\n  \r\n  const [query, setQuery] = useState(\"\");\r\n  \r\n  const handleInput = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    onFormSubmit(query);\r\n\r\n    setQuery(\"\");\r\n  };\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={handleInput}\r\n            value={query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React  from \"react\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nfunction ImageGalleryItem({handleImgClick, largeImageURL, webformatURL}) {\r\n  const onImageClick = (src) => {\r\n    handleImgClick(src);\r\n  };\r\n\r\n  \r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n          data-source={largeImageURL}\r\n          onClick={() => onImageClick(largeImageURL)}\r\n        />\r\n      </li>\r\n    );\r\n  \r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport \"./ImageGallery.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, handleImgClick }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        handleImgClick={handleImgClick}\r\n        largeImageURL={largeImageURL}\r\n        webformatURL={webformatURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","function fetchImages(currentQuery, currentPage = \"1\") {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${currentQuery}&page=${currentPage}&key=21925746-60d8df6678e20ce47ee1562cb&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(\r\n      new Error(`Нет изображений по запросу ${currentQuery}`)\r\n    );\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onBtn }) => (\r\n  <div className=\"conteinerBtn\">\r\n    <button className=\"Button\" type=\"button\" onClick={onBtn}>\r\n      Load more\r\n    </button>\r\n  </div>\r\n);\r\n\r\nButton.propTypes = {\r\n  onBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\n\r\nimport \"./Modal.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nfunction Modal({ toggleModal, children }) {\r\n\r\n  const modalRoot = useRef(document.querySelector('#modal-root'));\r\n\r\n  const handleEscape = useCallback(\r\n    event => {\r\n      if (event.code === 'Escape') {\r\n        toggleModal();\r\n      }\r\n    },\r\n    [toggleModal],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscape);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [handleEscape]);\r\n\r\n  const handleBackdrop = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={handleBackdrop}>\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      modalRoot.current,\r\n    );\r\n  \r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery\";\r\nimport api from \"./services/image-service\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Button from \"./components/Button\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n};\r\n\r\nfunction App() {\r\n  \r\n  const [images, setImages] = useState([]);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [currentQuery, setCurrentQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [bigImg, setBigImg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentQuery === \"\" && currentPage === 1) {\r\n      return;\r\n    } \r\n    handleQuery();\r\n  }, [currentQuery, currentPage])\r\n\r\n  const onFormSubmit = (query) => {\r\n    setCurrentQuery(query);\r\n    setCurrentPage(1);\r\n    setImages([]);\r\n  };\r\n\r\n  const handleQuery = () => {\r\n    setStatus(Status.PENDING);\r\n    setTimeout(() => {\r\n      api\r\n        .fetchImages(currentQuery, currentPage)\r\n        .then((response) => {\r\n          const newImages = response.hits.map(\r\n            ({ id, webformatURL, largeImageURL }) => ({\r\n              id,\r\n              webformatURL,\r\n              largeImageURL,\r\n            })\r\n          );\r\n\r\n          setImages([...images].concat(newImages));\r\n        })\r\n        .finally(() => {\r\n          setStatus(Status.RESOLVED);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n        });\r\n    }, 2000);\r\n  };\r\n\r\n  const handleMoreClick = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handleImgClick = (src) => {\r\n    setBigImg(src);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onFormSubmit={onFormSubmit} />\r\n      {status === \"pending\" && images.length === 0 ? (\r\n        <Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          height={80}\r\n          width={80}\r\n          className=\"conteiner\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <ImageGallery\r\n            images={images}\r\n            handleImgClick={handleImgClick}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {status === \"pending\" && images.length > 0 && (\r\n        <Loader\r\n          type=\"BallTriangle\"\r\n          color=\"#00BFFF\"\r\n          height={80}\r\n          width={80}\r\n          className=\"conteiner\"\r\n        />\r\n      )}\r\n      {status === \"resolved\" && <Button onBtn={handleMoreClick} />}\r\n      {showModal && (\r\n        <Modal toggleModal={toggleModal}>\r\n          <img src={bigImg} alt=\"\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}